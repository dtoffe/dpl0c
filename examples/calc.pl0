// Source: https://github.com/addiedx44/pl0-compiler/blob/master/doc/PL0%20User's%20Manual.pdf
//      PL/0 User Manual by Adam Dunson (2012) (page 5 - Basic Calculator Program)
//
// Modified to agree with this implementation's exact grammar (..\docs\PL-0%20Grammar.txt):
// - No "else"" in "if" statements.
// - Semicolon is a statement separator, not a finalizer.
// - Replace "in" and "out" by "read" and "write".
// - Use "#" instead of "<>" for not-equal.
// - Use "var" to declare variables, instead of "int".

// Const DIV renamed to DIVI because DIV is a reserved word in Pascal
const ADD = 1, SUB = 2, MULT = 3, DIVI = 4;

var op, x, y, done;

procedure add;
begin
    x := x + y;
    write x
end;

procedure sub;
begin
    x := x - y;
    write x
end;

procedure mult;
begin
    x := x * y;
    write x
end;

// Procedure div renamed to divi because div is a reserved word in Pascal
procedure divi;
begin
    // Check for divide-by-zero errors
    if y # 0 then
    begin
        x := x / y;
        write x
    end;
    if y = 0 then
        done := 1
end;

begin
    done := 0;
    read x;
    while done = 0 do
    begin
        read op;
        if op < 1 then
            done := 1;
        if op > 4 then
            done := 1;
        if done = 0 then
        begin
            read y;
            if op = ADD then
                call add;
            if op = SUB then
                call sub;
            if op = MULT then
                call mult;
            if op = DIVI then
                call divi
            //else done := 1;
        end
    end
end.
