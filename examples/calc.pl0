// Source: https://github.com/addiedx44/pl0-compiler/blob/master/doc/PL0%20User's%20Manual.pdf
//      PL/0 User Manual by Adam Dunson (2012) (page 5 - Basic Calculator Program)
//
// Modified to agree with this implementation's exact grammar (..\docs\PL-0%20Grammar.txt):
// - No "else"" in "if" statements.
// - Semicolon is a statement separator, not a finalizer.
// - Replace "in" and "out" by "read" and "write".
// - Use "#" instead of "<>" for not-equal.
// - Use "var" to declare variables, instead of "int".

// Const DIV renamed to DIVI because DIV is a reserved word in Pascal
const opADD = 1, opSUB = 2, opMULT = 3, opDIV = 4;

var op, x, y, done;

procedure doAdd;
begin
    x := x + y;
    write x
end;

procedure doSub;
begin
    x := x - y;
    write x
end;

procedure doMult;
begin
    x := x * y;
    write x
end;

procedure doDiv;
begin
    // Check for divide-by-zero errors
    if y # 0 then
    begin
        x := x / y;
        write x
    end;
    if y = 0 then
        done := 1
end;

begin
    done := 0;
    read x;
    while done = 0 do
    begin
        read op;
        if op < 1 then
            done := 1;
        if op > 4 then
            done := 1;
        if done = 0 then
        begin
            read y;
            if op = opADD then
                call doAdd;
            if op = opSUB then
                call doSub;
            if op = opMULT then
                call doMult;
            if op = opDIV then
                call doDiv
            //else done := 1;
        end
    end
end.
